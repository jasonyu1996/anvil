enum req_t {
    Read,
    Write(bv[16])
}

channel ch
{
    Req : left req_t@0-1;
    ResRead : right bv[16]@0-Req;
}

proc FF16 (c : left ch)
{
    reg r : bv[16];

    loop {
        let req = recv c.Req in
        req => {
            // match statement now following Rust syntax
            match req {
                Read -> send c.ResRead(!r),
                Write(v) -> r := v
            }
        }
    }
}

proc top()
{
    ch(ch_le, ch_ri);
    spawn FF16(ch_le);
    loop {
        send ch_ri.Req(Write(16'h1234)) =>
        send ch_ri.ReqRead =>
        let rdata = recv ch_ri.ResRead in
        rdata => println!("rdata: {rdata}");
    }
}
