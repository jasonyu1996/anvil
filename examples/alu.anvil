
type alu_op = [
    | Add
    | Sub
]

type alu_req = {
    a: logic[64];
    b: logic[64];
    op: alu_op
}

chan alu_chan = {
    in req : (alu_req@#0-#2) @#1 - @#1,
    out resp : (logic[64]@#0-#1) @req - @req
}

proc alu(i : left alu_chan) =
    reg res : logic[64]
    wait recv r_i = i::req then
    cycle then
    try send i::resp (!res) then
        set res := //1'b0
            match r_i.op with
            | Add -> r_i.a + r_i.b;
            | Sub -> r_i.a - r_i.b;
            done
    else 1'b0
