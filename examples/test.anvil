/* Example program for testing */

type variant = [| A of logic[2] | T of logic ]
type record = {
    c: logic[2];
    b: logic[3];
    e: logic[5]
}

chan pack = {
    out ping : (logic[10]@#0-#1)
}

proc slave(p : right pack) =
/* channel defs */
{}
/* spawns */
{}
/* regs */
{ st: logic, g : variant }
/* body */
{
    1'b0
}

proc master(p : left pack) =
/* channel defs */
{}
/* spawns */
{}
/* regs */
{
    counter: logic[10],
    rec: record
}
/* body */
{
    let wait send p::ping (!counter) in
    set counter := 1'b1
}

proc top() =
/* channel defs */
{
    foreign master_p -> foreign slave_p : pack
}
/* spawns */
{
    master(master_p),
    slave(slave_p)
}
/* regs */
{}
/* body */
{
    1'b0
}
