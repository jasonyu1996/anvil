/* Example program for testing */

chan pack {
    out ping : (logic[10]@) -> (logic[10]@)
}

proc slave(p : right pack)
/* channel defs */
{}
/* spawns */
{}
/* regs */
{}
/* refs */
{ tmp: logic @ #3 - #3 }
/* body */
{
    d = recv p::ping => return p::ping d + 10'b1
}

proc master(p : left pack)
/* channel defs */
{}
/* spawns */
{}
/* regs */
{
    counter: logic[10]
}
/* refs */
{
    d_val : logic[10] @ #0 - #1
}
/* body */
{
    => let a = 10'b1 in
        counter <- counter + a;
    if d = send p::ping(counter) =>
        let _ = counter <- counter + d in
        let _ = ref d_val = d in
        d
    {
        => counter <- counter + 2'b01
    } else {
        => counter <- counter + 2'b10
    }
}

proc top()
/* channel defs */
{
    foreign master_p -> foreign slave_p : pack
}
/* spawns */
{
    master(master_p),
    slave(slave_p)
}
/* regs */
{}
/* refs */
{}
/* body */
{}
