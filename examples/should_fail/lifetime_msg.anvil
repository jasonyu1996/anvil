chan reg_itfc = {
    right req : (logic@#0-#1)
}

proc reggg(e : right reg_itfc) =
    loop {
        let a = recv e::req in (
            a => (
                cycle 1 =>
                dprint "Received %d" (a)
            )
        )
    }

proc concurrent() =
    chan reg_le -- reg_ri : reg_itfc
    spawn reggg(reg_ri)
    reg r1 : logic[4]
    loop {
        let a = 4'b1 in
        cycle 1 => (
            // let b = if (1'b1) then a + a else a in
            if (1'b1) then (set r1 := 4'd0; dprint "Good" ()) else (set r1 := 4'd1; dprint "Bad" ());
            let b = a + a in
            dprint "Value a = %d, b = %d" (a, b);
            cycle 1 => (
                dprint "Concat result = %d" ({a, a});
                send reg_le::req (1'b1) => (
                    dprint "Sent" ();
                    cycle 1 => (
                        dfinish
                    )
                )
            )
        )
    }
